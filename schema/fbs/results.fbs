include "encode_value.fbs";
include "enums.fbs";

namespace dexkit.schema;

table ClassMeta {
    id: uint32;
    dex_id: uint32;
    source_file: string;
    annotations: [int32];
    access_flags: uint32;
    dex_descriptor: string;
    super_class: uint32;
    interfaces: [int32];
    fields: [int32];
    methods: [int32];
    // annotations, super_class, interfaces, fields, methods
    // need to call the corresponding method to actively load
}

table MethodMeta {
    id: uint32;
    dex_id: uint32;
    class_id: uint32;
    annotations: [int32];
    access_flags: uint32;
    dex_descriptor: string;
    return_type: uint32;
    parameter_types: [int32];
}

table FieldMeta {
    id: uint32;
    dex_id: uint32;
    class_id: uint32;
    annotations: [int32];
    access_flags: uint32;
    dex_descriptor: string;
    type: uint32;
}

table EnumValueMeta {
    // field id
    id: uint32;
    dex_id: uint32;
    class_id: uint32;
    value_name: string;
}

union AnnotationElementValue {
    EncodeValueByte,
    EncodeValueShort,
    EncodeValueChar,
    EncodeValueInt,
    EncodeValueLong,
    EncodeValueFloat,
    EncodeValueDouble,
    EncodeValueString,
    ClassMeta,
    EnumValueMeta,
    AnnotationElementValueArray,
    AnnotationMeta,
    EncodeValueBoolean,
}

table AnnotationElementValueArray {
    values: [AnnotationElementValue];
}

table AnnotationMemberMeta {
    name: string;
    value: AnnotationElementValue;
}

table AnnotationMeta {
    id: uint32;
    dex_id: uint32;
    class_id: uint32;
    target_element_types: [TargetElementType];
    retention_policy: RetentionPolicyType;
    members: [AnnotationMemberMeta];
}

table BatchFindClassItem {
    union_key: string;
    classes: [ClassMeta];
}

table BatchFindMethodItem {
    union_key: string;
    methods: [MethodMeta];
}