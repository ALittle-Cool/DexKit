// automatically generated by the FlatBuffers compiler, do not modify

package org.luckypray.dexkit.schema

import com.google.flatbuffers.Constants
import com.google.flatbuffers.FlatBufferBuilder
import com.google.flatbuffers.Table
import java.nio.ByteBuffer
import java.nio.ByteOrder

@Suppress("unused")
class AnnotationMember : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : AnnotationMember {
        __init(_i, _bb)
        return this
    }
    val name : String?
        get() {
            val o = __offset(4)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val nameAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(4, 1)
    fun nameInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 4, 1)
    val valueType : UByte
        get() {
            val o = __offset(6)
            return if(o != 0) bb.get(o + bb_pos).toUByte() else 0u
        }
    fun mutateValueType(valueType: UByte) : Boolean {
        val o = __offset(6)
        return if (o != 0) {
            bb.put(o + bb_pos, valueType.toByte())
            true
        } else {
            false
        }
    }
    fun value(obj: Table) : Table? {
        val o = __offset(8); return if (o != 0) __union(obj, o + bb_pos) else null
    }
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_23_5_26()
        fun getRootAsAnnotationMember(_bb: ByteBuffer): AnnotationMember = getRootAsAnnotationMember(_bb, AnnotationMember())
        fun getRootAsAnnotationMember(_bb: ByteBuffer, obj: AnnotationMember): AnnotationMember {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun createAnnotationMember(builder: FlatBufferBuilder, nameOffset: Int, valueType: UByte, valueOffset: Int) : Int {
            builder.startTable(3)
            addValue(builder, valueOffset)
            addName(builder, nameOffset)
            addValueType(builder, valueType)
            return endAnnotationMember(builder)
        }
        fun startAnnotationMember(builder: FlatBufferBuilder) = builder.startTable(3)
        fun addName(builder: FlatBufferBuilder, name: Int) = builder.addOffset(0, name, 0)
        fun addValueType(builder: FlatBufferBuilder, valueType: UByte) = builder.addByte(1, valueType.toByte(), 0)
        fun addValue(builder: FlatBufferBuilder, value: Int) = builder.addOffset(2, value, 0)
        fun endAnnotationMember(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
